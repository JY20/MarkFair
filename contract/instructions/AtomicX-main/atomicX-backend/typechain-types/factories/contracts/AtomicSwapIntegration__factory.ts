/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  AtomicSwapIntegration,
  AtomicSwapIntegrationInterface,
} from "../../contracts/AtomicSwapIntegration";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_htlcFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oneInchWrapper",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "escrow",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLimitOrder",
        type: "bool",
      },
    ],
    name: "AtomicSwapWithLimitOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "escrow",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LimitOrderFilledWithHTLC",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct StarknetEscrowFactory.Immutables",
        name: "immutables",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "createLimitOrder",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makerAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct OneInchWrapper.LimitOrder",
        name: "limitOrderData",
        type: "tuple",
      },
    ],
    name: "createAtomicSwapWithLimitOrder",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makerAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct OneInchWrapper.LimitOrder",
        name: "limitOrderData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct StarknetEscrowFactory.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "fillLimitOrderWithHTLC",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makerAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct OneInchWrapper.LimitOrder",
        name: "limitOrderData",
        type: "tuple",
      },
    ],
    name: "getLimitOrderHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "htlcFactory",
    outputs: [
      {
        internalType: "contract StarknetEscrowFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makerAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct OneInchWrapper.LimitOrder",
        name: "limitOrderData",
        type: "tuple",
      },
    ],
    name: "isLimitOrderValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oneInchWrapper",
    outputs: [
      {
        internalType: "contract OneInchWrapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610ecc380380610ecc83398101604081905261002f916100c2565b600160005561003d33610054565b6001600160a01b039182166080521660a0526100f5565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146100bd57600080fd5b919050565b600080604083850312156100d557600080fd5b6100de836100a6565b91506100ec602084016100a6565b90509250929050565b60805160a051610d7a610152600039600081816101d801528181610268015281816102a40152818161033a015281816103cf0152610762015260008181610140015281816101b30152818161044001526106ca0152610d7a6000f3fe60806040526004361061009c5760003560e01c80638da5cb5b116100645780638da5cb5b1461017a578063953874d21461019857806395ccea6714610203578063c7ead3e514610223578063f2fde38b14610236578063f80299521461025657600080fd5b80633d778aef146100a15780633f79510f146100d657806346d8bc7514610104578063715018a61461011957806374eb83bc1461012e575b600080fd5b3480156100ad57600080fd5b506100c16100bc366004610a73565b61028a565b60405190151581526020015b60405180910390f35b3480156100e257600080fd5b506100f66100f1366004610a73565b610320565b6040519081526020016100cd565b610117610112366004610b34565b6103b0565b005b34801561012557600080fd5b506101176105f1565b34801561013a57600080fd5b506101627f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100cd565b34801561018657600080fd5b506001546001600160a01b0316610162565b3480156101a457600080fd5b50604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811682527f0000000000000000000000000000000000000000000000000000000000000000166020820152016100cd565b34801561020f57600080fd5b5061011761021e366004610b7f565b610605565b610117610231366004610bb9565b6106be565b34801561024257600080fd5b50610117610251366004610c03565b6108d8565b34801561026257600080fd5b506101627f000000000000000000000000000000000000000000000000000000000000000081565b60405163630f5bbd60e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063630f5bbd906102d9908590600401610c20565b602060405180830381865afa1580156102f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031a9190610c98565b92915050565b60405163611e9b4160e11b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c23d36829061036f908590600401610c20565b602060405180830381865afa15801561038c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031a9190610cb5565b6103b8610956565b60405163201abfe160e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906340357fc29060608501359061040a908690600401610c20565b6000604051808303818588803b15801561042357600080fd5b505af1158015610437573d6000803e3d6000fd5b505050505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c3a2884134846040518363ffffffff1660e01b815260040161048b9190610cce565b60206040518083038185885af11580156104a9573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906104ce9190610d27565b90503360006104e06020860186610c03565b6001600160a01b0316146104f557825161059a565b6105026020850185610c03565b6105126040860160208701610c03565b6040860135606087013561052c60a0890160808a01610c03565b6040516bffffffffffffffffffffffff19606096871b8116602083015294861b851660348201526048810193909352606883019190915290921b16608882015260a0850135609c82015260c085013560bc82015260dc01604051602081830303815290604052805190602001205b60a0840151604080516001600160a01b038616815260208101929092527f3e124b5044caec2b35b96f0fd0ee42f3225e9e00a5f2aa8227e604a1484c5151910160405180910390a3506105ed6001600055565b5050565b6105f96109af565b6106036000610a09565b565b61060d6109af565b6001600160a01b03821661064d57604051339082156108fc029083906000818181858888f19350505050158015610648573d6000803e3d6000fd5b505050565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af115801561069a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106489190610c98565b6106c6610956565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c3a2884134866040518363ffffffff1660e01b81526004016107159190610cce565b60206040518083038185885af1158015610733573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906107589190610d27565b9050821561084d577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b13db4f68360400135846040518363ffffffff1660e01b81526004016107b19190610c20565b6000604051808303818588803b1580156107ca57600080fd5b505af11580156107de573d6000803e3d6000fd5b50505050606085810151604080880151885160a08a015183516001600160a01b038981168252602082019290925260019481019490945293841695509216927f41c75ba45ad58bd43fc14b5aceb21a3858cede519c9415c4ae05a930a6c3065d910160405180910390a46108cd565b83606001516001600160a01b031684604001516001600160a01b031685600001517f41c75ba45ad58bd43fc14b5aceb21a3858cede519c9415c4ae05a930a6c3065d848860a0015160006040516108c4939291906001600160a01b0393909316835260208301919091521515604082015260600190565b60405180910390a45b506106486001600055565b6108e06109af565b6001600160a01b03811661094a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61095381610a09565b50565b6002600054036109a85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610941565b6002600055565b6001546001600160a01b031633146106035760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610941565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060e08284031215610a6d57600080fd5b50919050565b600060e08284031215610a8557600080fd5b610a8f8383610a5b565b9392505050565b6000610100808385031215610aaa57600080fd5b6040519081019067ffffffffffffffff82118183101715610adb57634e487b7160e01b600052604160045260246000fd5b81604052809250833581526020840135602082015260408401356040820152606084013560608201526080840135608082015260a084013560a082015260c084013560c082015260e084013560e0820152505092915050565b6000806101e08385031215610b4857600080fd5b610b528484610a5b565b9150610b618460e08501610a96565b90509250929050565b6001600160a01b038116811461095357600080fd5b60008060408385031215610b9257600080fd5b8235610b9d81610b6a565b946020939093013593505050565b801515811461095357600080fd5b60008060006102008486031215610bcf57600080fd5b610bd98585610a96565b9250610100840135610bea81610bab565b9150610bfa856101208601610a5b565b90509250925092565b600060208284031215610c1557600080fd5b8135610a8f81610b6a565b60e081018235610c2f81610b6a565b6001600160a01b039081168352602084013590610c4b82610b6a565b8082166020850152604085013560408501526060850135606085015260808501359150610c7782610b6a565b16608083015260a0838101359083015260c092830135929091019190915290565b600060208284031215610caa57600080fd5b8151610a8f81610bab565b600060208284031215610cc757600080fd5b5051919050565b600061010082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b600060208284031215610d3957600080fd5b8151610a8f81610b6a56fea2646970667358221220f564c2870e4305b54483c53d9837304afd87461d77411d12396d49ed91a4ca2f64736f6c63430008110033";

type AtomicSwapIntegrationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AtomicSwapIntegrationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AtomicSwapIntegration__factory extends ContractFactory {
  constructor(...args: AtomicSwapIntegrationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _htlcFactory: PromiseOrValue<string>,
    _oneInchWrapper: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AtomicSwapIntegration> {
    return super.deploy(
      _htlcFactory,
      _oneInchWrapper,
      overrides || {}
    ) as Promise<AtomicSwapIntegration>;
  }
  override getDeployTransaction(
    _htlcFactory: PromiseOrValue<string>,
    _oneInchWrapper: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _htlcFactory,
      _oneInchWrapper,
      overrides || {}
    );
  }
  override attach(address: string): AtomicSwapIntegration {
    return super.attach(address) as AtomicSwapIntegration;
  }
  override connect(signer: Signer): AtomicSwapIntegration__factory {
    return super.connect(signer) as AtomicSwapIntegration__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AtomicSwapIntegrationInterface {
    return new utils.Interface(_abi) as AtomicSwapIntegrationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AtomicSwapIntegration {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AtomicSwapIntegration;
  }
}
